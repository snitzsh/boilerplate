# NOTES:
# Source of truth
#
# if `namespaced: false`, it will install chart in the `default` namespace # if namespaced is false and namespace_name is null, it will place it in `default` namespace
# IMPORTANT:
# - Do not use null, instead use "null" <- with quotes. Since we are passing arguments
#   bash does not take empty arguments, arguments shifts if argument is empty.

# NOTES:
# - Does not support the following:
#   - if specific_name is not null and namespaced is false, it will NOT place the helm-chart in that specified_name,
#     it will place it helm-chart in the charts.name namespace
dependencies:
  - name: argo
    repository: https://argoproj.github.io/argo-helm
    charts:
      - name: argo-cd
        latest_version: 5.51.4 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 5.48.0
          - 5.50.1
          - 5.51.1
          - 5.51.2
          - 5.51.3
          - 5.51.4
        condition: argo-cd.disabled # opts: disabled | enabled
        specific_name: argo-cd # For example istio/base install documentation shows istio-base when installing
        namespace_name: argo-cd # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 5.46.6 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: argo-workflows
        latest_version: 0.39.3 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 0.37.0
          - 0.38.0
          - 0.39.0
          - 0.39.3
        condition: argo-workflows.disabled # opts: disabled | enabled
        specific_name: argo-workflows # For example istio/base install documentation shows istio-base when installing
        namespace_name: argo-workflows # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 0.33.3 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: cert-manager
    repository: https://charts.jetstack.io
    charts:
      - name: cert-manager
        latest_version: v1.13.2 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - v1.13.1
          - v1.13.2
        condition: cert-manager.disabled # opts: disabled | enabled
        specific_name: cert-manager # For example istio/base install documentation shows istio-base when installing
        namespace_name: cert-manager # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: v1.13.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: cetic
    repository: https://cetic.github.io/helm-charts
    charts:
      - name: adminer
        latest_version: 0.2.1 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: [] # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
        condition: adminer.disabled # opts: disabled | enabled
        specific_name: adminer # For example istio/base install documentation shows istio-base when installing
        namespace_name: adminer # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 0.2.1 # current version
        is_up_to_date: true # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true # DESCRIPTION: Releases history. Must be > .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: chartmuseum
    repository: https://chartmuseum.github.io/charts
    charts:
      - name: chartmuseum
        latest_version: 3.10.1 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 3.10.1
        condition: chartmuseum.disabled # opts: disabled | enabled
        specific_name: chartmuseum # For example istio/base install documentation shows istio-base when installing
        namespace_name: chartmuseum # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 3.10.1 # current version
        is_up_to_date: true # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true # DESCRIPTION: Releases history. Must be > .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: external-dns
    repository: https://kubernetes-sigs.github.io/external-dns/
    charts:
      - name: external-dns
        latest_version: 1.13.1 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: []
        condition: external-dns.disabled
        specific_name: external-dns
        namespace_name: external-dns
        is_deployed: false
        version: 1.13.1
        is_up_to_date: true # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true
        has_repo: true
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: external-secrets
    repository: https://charts.external-secrets.io
    charts:
      - name: external-secrets
        latest_version: 0.9.9 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 0.9.7
          - 0.9.8
          - 0.9.9
        condition: external-secrets.disabled # opts: disabled | enabled
        specific_name: external-secrets # For example istio/base install documentation shows istio-base when installing
        namespace_name: default # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 0.9.5 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: false # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: fluent
    repository: https://fluent.github.io/helm-charts
    charts:
      - name: fluent-bit
        latest_version: 0.40.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 0.39.0
          - 0.39.1
          - 0.40.0
        condition: fluent-bit.disabled # opts: disabled | enabled
        specific_name: fluent-bit # For example istio/base install documentation shows istio-base when installing
        namespace_name: fluent-bit # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 0.38.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: grafana
    repository: https://grafana.github.io/helm-charts
    charts:
      - name: grafana
        latest_version: 7.0.8 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 6.61.1
          - 7.0.1
          - 7.0.3
          - 7.0.4
          - 7.0.6
          - 7.0.8
        condition: grafana.disabled # opts: disabled | enabled
        specific_name: grafana # For example istio/base install documentation shows istio-base when installing
        namespace_name: grafana # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 6.60.1 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: istio
    repository: https://istio-release.storage.googleapis.com/charts
    charts: # Charts must be install in this order
      - name: base
        latest_version: 1.20.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 1.19.3
          - 1.20.0
        condition: base.disabled # opts: disabled | enabled
        specific_name: istio-base # For example istio/base install documentation shows istio-base when installing
        namespace_name: istio-system # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.19.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: istiod
        latest_version: 1.20.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 1.19.3
          - 1.20.0
        condition: istiod.disabled # opts: disabled | enabled
        specific_name: istiod # For example istio/base install documentation shows istio-base when installing
        namespace_name: istio-system # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.19.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: gateway
        latest_version: 1.20.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 1.19.3
          - 1.20.0
        condition: gateway.disabled # opts: disabled | enabled"
        specific_name: istio-ingressgateway # For example istio/base install documentation shows istio-base when installing
        namespace_name: istio-system # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.19.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: jaegertracing
    repository: https://jaegertracing.github.io/helm-charts
    charts:
      - name: jaeger # Consumes too much cpu in minikube
        latest_version: 0.72.1 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 0.71.17
          - 0.72.0
          - 0.72.1
        condition: jaeger.disabled # opts: disabled | enabled
        specific_name: jaeger # Consumes too much cpu in minikube
        namespace_name: jaeger # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 0.71.14 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: kiali # Consumes too much cpu in minikube
    repository: https://kiali.org/helm-charts
    charts:
      - name: kiali-operator
        latest_version: 1.77.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 1.75.0
          - 1.76.0
          - 1.77.0
        condition: kiali-operator.disabled # opts: disabled | enabled
        specific_name: kiali-operator # For example istio/base install documentation shows istio-base when installing
        namespace_name: kiali-operator # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.74.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: kyverno
    repository: https://kyverno.github.io/kyverno
    charts:
      - name: kyverno
        latest_version: 3.1.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 3.0.5
          - 3.0.6
        condition: kyverno.disabled # opts: disabled | enabled
        specific_name: kyverno # For example istio/base install documentation shows istio-base when installing
        namespace_name: kyverno # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 3.1.0-beta.2 # current version
        is_up_to_date: true # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: linkerd
    repository: https://helm.linkerd.io/stable
    charts:
      - name: linkerd-crds
        latest_version: 1.8.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 1.8.0
        condition: linkerd-crds.disabled # opts: disabled | enabled
        specific_name: linkerd-crds # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        namespace_name: linkerd # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.8.0 # current version
        is_up_to_date: true # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # DESCRIPTION: Releases history. Must be > .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: linkerd-control-plane
        latest_version: 1.16.6 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 1.16.2
          - 1.16.3
          - 1.16.4
          - 1.16.5
          - 1.16.6
        condition: linkerd-control-plane.disabled # opts: disabled | enabled
        specific_name: linkerd-control-plane # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        namespace_name: linkerd # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.15.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: linkerd2-cni
        latest_version: 30.12.1 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 30.12.1
        condition: linkerd2-cni.disabled # opts: disabled | enabled
        specific_name: linkerd2-cni # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        namespace_name: linkerd-cni # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 30.11.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: metrics-server
    repository: https://kubernetes-sigs.github.io/metrics-server/
    charts:
      - name: metrics-server
        latest_version: 3.11.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 3.11.0
        condition: metrics-server.disabled # opts: disabled | enabled
        specific_name: metrics-server # For example istio/base install documentation shows istio-base when installing
        namespace_name: metrics-server # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 3.11.0 # current version
        is_up_to_date: true # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true # DESCRIPTION: Releases history. Must be > .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: prometheus-community
    repository: https://prometheus-community.github.io/helm-charts
    charts:
      - name: prometheus
        latest_version: 25.8.0 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 25.3.1
          - 25.4.0
          - 25.6.0
          - 25.8.0
        condition: prometheus.disabled # opts: disabled | enabled
        specific_name: prometheus # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        namespace_name: prometheus
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 25.0.0 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true
        has_repo: true
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: stakater
    repository: https://stakater.github.io/stakater-charts
    charts:
      - name: reloader
        latest_version: 1.0.52 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 1.0.48
          - 1.0.50
          - 1.0.51
          - 1.0.52
        condition: reloader.enabled # opts: disabled | enabled
        specific_name: reloader # For example istio/base install documentation shows istio-base when installing
        namespace_name: default # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.0.41 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: false # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: vmware-tanzu
    repository: https://vmware-tanzu.github.io/helm-charts
    charts:
      - name: velero
        latest_version: 5.1.4 # DESCRIPTION: Latest version of the helm-chart. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get the latest version.
        releases: # DESCRIPTION: Releases history. Must be >= .version. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to get new releases.
          - 5.1.0
          - 5.1.2
          - 5.1.3
          - 5.1.4
        condition: velero.enabled # opts: disabled | enabled
        specific_name: velero # For example istio/base install documentation shows istio-base when installing
        namespace_name: default # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 5.0.2 # current version
        is_up_to_date: false # DESCRIPTION: Check if chart is up-to-date. IMPORTANT: Do NOT edit this property (key/values) manually. Use boilerplate repo to update the value.
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: true # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  # This is NOT a helm-chart. but to prevent alot of code in main.sh following consistency of how other `Real` helm charts are installed.
  - name: knative
    repository: https://github.com/knative
    charts:
      - name: knative-operator
        latest_version: null # latest version of chart.
        releases: [] # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        condition: knative-operator.disabled # opts: disabled | enabled
        specific_name: knative-operator # For example istio/base install documentation shows istio-base when installing
        namespace_name: default # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.10.0 # current version
        is_up_to_date: false
        namespaced: false # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: false
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: knative-serving
        latest_version: null # latest version of chart.
        releases: [] # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        condition: knative-serving.disabled # opts: disabled | enabled
        specific_name: knative-serving # For example istio/base install documentation shows istio-base when installing
        namespace_name: knative-serving # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.10.1 # current version
        is_up_to_date: false
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: false
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: knative-eventing
        latest_version: null # latest version of chart.
        releases: [] # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        condition: knative-eventing.disabled # opts: disabled | enabled
        specific_name: knative-eventing # For example istio/base install documentation shows istio-base when installing
        namespace_name: knative-eventing # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.10.1 # current version
        is_up_to_date: false
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: false
        platform_repository: true
        language: helm
        service: third-party
        software_type: open-source
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
  - name: platform # Snitch charts, for now main.sh has been modified ignore the domain because it does not exist.
    repository: https://chartmuseum.snitzh.com/charts
    charts:
      - name: apis-fastify
        latest_version: null # latest version of chart.
        releases: [] # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        condition: apis-fastify.disabled # opts: disabled | enabled
        specific_name: apis-fastify # For example istio/base install documentation shows istio-base when installing
        namespace_name: apis-fastify # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.0.0 # current version
        is_up_to_date: false
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: false
        platform_repository: true
        language: fastify
        service: tenant
        software_type: proprietary
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: apis-rust
        latest_version: null # latest version of chart.
        releases: [] # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        condition: apis-rust.disabled # opts: disabled | enabled
        specific_name: apis-rust # For example istio/base install documentation shows istio-base when installing
        namespace_name: apis-rust # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.0.0 # current version
        is_up_to_date: false
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: false
        platform_repository: true
        language: rust
        service: tenant
        software_type: proprietary
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
      - name: website-vue
        latest_version: null # latest version of chart.
        releases: [] # there will be a job running every day to fetch new release. This only contain anything > version, everything else will be removed from the array.
        condition: website-vue.disabled # opts: disabled | enabled
        specific_name: website-vue # For example istio/base install documentation shows istio-base when installing
        namespace_name: website-vue # if the name of the chart has a different namespace
        is_deployed: false # "null | true | false". Value changes dynamically by ./main.sh
        version: 1.0.0 # current version
        is_up_to_date: false
        namespaced: true # if namespaced is false and namespace_name is null, it will place it in `default` namespace
        has_repo: false
        platform_repository: true
        language: vue
        service: tenant
        software_type: proprietary
        configs_repository: "" # the ssh repo name that calls the public chart. This serves as a wrapper to have control of the configurations. Repository must be created in our organization, else argo-cd will fail.
