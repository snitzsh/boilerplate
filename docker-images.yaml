#
# TODO:
#   - helm-chart version should the same as [package.json .Cargo.toml] version
#     and [git and image] tag_name should match the verion.
#   - make aws api call to get ec2 image version, or any registry. That way
#     we can handle the next version.
#
# NOTE:
#   - follows the sames docker-composer/values.yaml structure
#   - It follows the folder structure. Ex:
#     /uis/snitzsh/main-rust
#   - Image may belong to multiple helm-charts.
#   - Since a helm-chart is not attach to helm-chart-.*-configs projects and a
#     helm-chart-.*-configs is not attached to specific image, this is
#     independent and will build a new image regardless if its deployed to a
#     cluster.
#

# registries to push, if more than one
# you must have ~/.aws/ config set up.

apps:
  - snitzsh
# user: ""
# domain: ""
image_only: false
merge_apps: true

registries:
  - docker

platform: "linux/arm64" # mac or linux

# env: {}

# components keys follows local folder structure (if you used boilerplate to
# clone repos).
components:
  private:
    apis:
      snitzsh:
        main-rust:
          enabled: true
          version: 0.1.0
          # all tags created (must match git repo and aws registry)
          # ex: {"aws_ecr": {"dev": {"tags": ["tag_1", "tag_2"], "current_tag": ""}}}
          tags: {}
    uis:
      snitzsh:
        main-vue:
          enabled: true
          version: 0.1.0
          # all tags created (must match git repo and aws registry)
          # ex: {"aws_ecr": {"dev": {"tags": ["tag_1", "tag_2"], "current_tag": ""}}}
          tags: {}

# docker:
#   volumes: ""
#   networks: ""

# auth:
#   email: ""
#   username: ""
#   password: ""
